{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/direction-reveal.js","scripts/main.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\n/**\n  Direction aware content reveals.\n\n  @param {Object} object - Container for all options.\n  @param {string} selector - Container element selector.\n  @param {string} itemSelector - Item element selector.\n  @param {string} animationName - Animation CSS class.\n  @param {bollean} enableTouch  - Adds touch event to show content on first click then follow link on the second click.\n  @param {integer} touchThreshold - Touch length must be less than this to trigger reveal which prevents the event triggering if user is scrolling.\n*/\n\n\nconst DirectionReveal = function ({\n  selector: selector = '.direction-reveal',\n  itemSelector: itemSelector = '.direction-reveal__card',\n  animationName: animationName = 'swing',\n  enableTouch: enableTouch = true,\n  touchThreshold: touchThreshold = 250\n  } = {}) {\n\n  const containers = document.querySelectorAll(selector);\n  let touchStart;\n\n\n  const getDirection = function (e, item) {\n    // Width and height of current item\n    let w = item.offsetWidth;\n    let h = item.offsetHeight;\n    let position = getPosition(item);\n\n    // Calculate the x/y value of the pointer entering/exiting, relative to the center of the item.\n    let x = (e.pageX - position.x - (w / 2) * (w > h ? (h / w) : 1));\n    let y = (e.pageY - position.y - (h / 2) * (h > w ? (w / h) : 1));\n\n    // Calculate the angle the pointer entered/exited and convert to clockwise format (top/right/bottom/left = 0/1/2/3).  See https://stackoverflow.com/a/3647634 for a full explanation.\n    let d = Math.round(Math.atan2(y, x) / 1.57079633 + 5) % 4;\n\n    // console.table([x, y, w, h, e.pageX, e.pageY, item.offsetLeft, item.offsetTop, position.x, position.y]);\n\n    return d;\n  };\n\n\n  // https://www.kirupa.com/html5/get_element_position_using_javascript.htm\n  const getPosition = function (el) {\n    let xPos = 0;\n    let yPos = 0;\n\n    while (el) {\n      xPos += (el.offsetLeft + el.clientLeft);\n      yPos += (el.offsetTop + el.clientTop);\n\n      el = el.offsetParent;\n    }\n    return {\n      x: xPos,\n      y: yPos\n    };\n  }\n\n\n  const translateDirection = switchcase({\n    0: 'top',\n    1: 'right',\n    2: 'bottom',\n    3: 'left'\n  })('top');\n\n\n  const addClass = function (e, state) {\n    let currentItem = e.currentTarget;\n    let direction = getDirection(e, currentItem);\n    let directionString = translateDirection(direction);\n\n    // Remove current animation classes and add new ones e.g. swap --in for --out.\n    let currentCssClasses = currentItem.className.split(' ');\n    let filteredCssClasses = currentCssClasses.filter((cssClass) => (!cssClass.startsWith(animationName))).join(' ');\n    currentItem.className = filteredCssClasses;\n    currentItem.classList.add(`${animationName}--${state}-${directionString}`);\n  };\n\n\n  const bindEvents = function (containerItem) {\n    const items = containerItem.querySelectorAll(itemSelector);\n\n    items.forEach((item) => {\n\n      addEventListenerMulti(item, ['mouseenter', 'focus'], (e) => {\n        addClass(e, 'in');\n      });\n\n      addEventListenerMulti(item, ['mouseleave', 'blur'], (e) => {\n        addClass(e, 'out');\n      });\n\n\n      if (enableTouch) {\n\n        item.addEventListener('touchstart', (e) => {\n          touchStart = +new Date;\n        }, { passive: true });\n\n        item.addEventListener('touchend', (e) => {\n          let touchTime = +new Date - touchStart;\n\n          if (touchTime < touchThreshold && !item.className.includes(`${animationName}--in`)) {\n            e.preventDefault();\n\n            resetVisible(e, items, addClass(e, 'in'));\n          }\n        });\n\n      }\n\n    });\n  };\n\n  const addEventListenerMulti = function (element, events, fn) {\n    events.forEach((e) => element.addEventListener(e, fn));\n  }\n\n\n  const resetVisible = function (e, items, callback) {\n\n    items.forEach((item) => {\n      let currentCssClasses = item.className;\n\n      if(currentCssClasses.includes(`${animationName}--in`) && item !== e.currentTarget) {\n        item.className = currentCssClasses.replace(`${animationName}--in`, `${animationName}--out`);\n      }\n    });\n\n    callback;\n  };\n\n\n  const init = function () {\n\n    if (containers.length) {\n      containers.forEach((containerItem) => {\n        bindEvents(containerItem);\n      });\n    }\n    else {\n      return;\n    }\n\n  };\n\n  // Init is called by default\n  init();\n\n\n  // Reveal API\n  return {\n    init\n  };\n};\n\nexport default DirectionReveal;\n\n\n// Better switch cases - https://hackernoon.com/rethinking-javascript-eliminate-the-switch-statement-for-better-code-5c81c044716d\nexport const switchcase = cases => defaultCase => key =>\nkey in cases ? cases[key] : defaultCase;\n","import DirectionReveal from './direction-reveal.js';\n\n// Swing animation(Default)\nconst directionRevealSwing = DirectionReveal({\n  selector: '.direction-reveal--demo-swing'\n});\n\n// Slide animation with all options specified\nconst directionRevealSlide = DirectionReveal({\n  selector: '.direction-reveal--demo-slide',\n  itemSelector: '.direction-reveal__card',\n  animationName: 'slide',\n  enableTouch: true,\n  touchThreshold: 250\n});\n\n// Slide & push\nconst directionRevealSlidePush = DirectionReveal({\n  selector: '.direction-reveal--demo-slide-push',\n  animationName: 'slide'\n});\n\n// Rotate animation\nconst directionRevealRotate = DirectionReveal({\n  selector: '.direction-reveal--demo-rotate',\n  animationName: 'rotate'\n});\n\n// Flip animation\nconst directionRevealFlip = DirectionReveal({\n  selector: '.direction-reveal--demo-flip',\n  animationName: 'flip'\n});\n\n// Bootstrap demo\nconst directionRevealBoostrap = DirectionReveal({\n  selector: '.direction-reveal--demo-bootstrap'\n});\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}